<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StellarWolf.Core</name>
    </assembly>
    <members>
        <member name="T:StellarWolf.Core.ChaosEngine">
            <summary>
            A pseudorandom number generator.
            </summary>
        </member>
        <member name="P:StellarWolf.Core.ChaosEngine.Shared">
            <summary>
            A thread safe instance of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/>
            </summary>
        </member>
        <member name="P:StellarWolf.Core.ChaosEngine.Seed">
            <summary>
            The seed used for the current state of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/>.
            </summary>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.#ctor">
            <summary>
            Initializes a new instance of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/> with an undetermined seed.
            </summary>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/> with the specified seed.
            </summary>
            <param name="seed">The initial state of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/>.</param>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.#ctor(System.Int32[])">
            <summary>
            Initializes a new instance of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/> with the specified state.
            </summary>
            <param name="saveState">The state of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/>.</param>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/> with the specified seed.
            </summary>
            <param name="seed">The initial state of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/>.</param>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.Reset">
            <summary>
            Reset the state of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/> with the existing seed.
            </summary>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.Reseed">
            <summary>
            Reseeds the <seealso cref="T:StellarWolf.Core.ChaosEngine"/> with a new undetermined seed.
            </summary>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.Reseed(System.String)">
            <summary>
            Reseeds the <seealso cref="T:StellarWolf.Core.ChaosEngine"/> with a specified seed.
            </summary>
            <param name="seed">The initial state of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/>.</param>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.Reseed(System.Nullable{System.Int32})">
            <summary>
            Reseeds the <seealso cref="T:StellarWolf.Core.ChaosEngine"/> with a specified seed.
            </summary>
            <param name="seed">The initial state of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/>.</param>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextInteger">
            <summary>
            Returns a random 32-bit integer in the range 0..<seealso cref="F:System.Int32.MaxValue"/>.
            </summary>
            <returns>A random 32-bit integer such that 0 ≤ value &lt; <seealso cref="F:System.Int32.MaxValue"/>.</returns>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextInteger(System.Int32,System.Int32)">
            <summary>
            Returns a random 32-bit integer in the range <paramref name="minValue"/>..<paramref name="maxValue"/>.
            </summary>
            <param name="minValue">The inclusive minimum value.</param>
            <param name="maxValue">The exclusive maximum value.</param>
            <returns>A random 32-bit integer such that <paramref name="minValue"/> ≤ value &lt; <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextInteger(System.Int32)">
            <summary>
            Returns a random 32-bit integer in the range 0..<paramref name="maxValue"/>.
            </summary>
            <param name="maxValue">The exclusive maximum value.</param>
            <returns>A random 32-bit integer such that 0 ≤ value &lt; <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextIntegers(System.Int32[])">
            <summary>
            Fills an array of 32-bit integers with random values in the range 0..<seealso cref="F:System.Int32.MaxValue"/>.
            </summary>
            <param name="buffer">The array of 32-bit integers to be filled.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextIntegers(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Fills an array of 32-bit integers with random values in the range <paramref name="minValue"/>..<paramref name="maxValue"/>.
            </summary>
            <param name="minValue">The inclusive minimum value.</param>
            <param name="maxValue">The exclusive maximum value.</param>
            <param name="buffer">The array of 32-bit integers to be filled.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextIntegers(System.Int32,System.Int32[])">
            <summary>
            Fills an array of 32-bit integers with random values in the range 0..<paramref name="maxValue"/>.
            </summary>
            <param name="maxValue">The exclusive maximum value.</param>
            <param name="buffer">The array of 32-bit integers to be filled.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextIntegers(System.Int32)">
            <summary>
            Returns an array of 32-bit integers with random values in the range 0..<seealso cref="F:System.Int32.MaxValue"/>.
            </summary>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of 32-bit integers filled with random values such that 0 ≤ value &lt; <seealso cref="F:System.Int32.MaxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextIntegers(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns an array of 32-bit integers with random values in the range <paramref name="minValue"/>..<paramref name="maxValue"/>.
            </summary>
            <param name="minValue">The inclusive minimum value.</param>
            <param name="maxValue">The exclusive maximum value.</param>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of 32-bit integers filled with random values such that <paramref name="minValue"/> ≤ value &gt; <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextIntegers(System.Int32,System.Int32)">
            <summary>
            Returns an array of 32-bit integers with random values in the range 0..<paramref name="maxValue"/>.
            </summary>
            <param name="maxValue">The exclusive maximum value.</param>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of 32-bit integers filled with random values such that 0 ≤ value &lt; <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextDouble">
            <summary>
            Returns a random double-precision floating-point number in the range 0..1.
            </summary>
            <returns>A random double-precision floating-point number such that 0 ≤ value ≤ 1.</returns>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextDouble(System.Double,System.Double)">
            <summary>
            Returns a random double-precision floating-point number in the range <paramref name="minValue"/>..<paramref name="maxValue"/>.
            </summary>
            <param name="minValue">The inclusive minimum value.</param>
            <param name="maxValue">The inclusive maximum value.</param>
            <returns>A random double-precision floating-point number such that <paramref name="minValue"/> ≤ value ≤ <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextDouble(System.Double)">
            <summary>
            Returns a random double-precision floating-point number in the range 0..<paramref name="maxValue"/>.
            </summary>
            <param name="maxValue">The inclusive maximum value.</param>
            <returns>A random double-precision floating-point number such that 0 ≤ value ≤ <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextDoubles(System.Double[])">
            <summary>
            Fills an array of double-precision floating-point numbers with random values in the range 0..1.
            </summary>
            <param name="buffer">The array of double-precision floating-point numbers to be filled.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextDoubles(System.Double,System.Double,System.Double[])">
            <summary>
            Fills an array of double-precision floating-point numbers with random values in the range <paramref name="minValue"/>..<paramref name="maxValue"/>.
            </summary>
            <param name="minValue">The inclusive minimum value.</param>
            <param name="maxValue">The inclusive maximum value.</param>
            <param name="buffer">The array of double-precision floating-point numbers to be filled.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextDoubles(System.Double,System.Double[])">
            <summary>
            Fills an array of double-precision floating-point numbers with random values in the range 0..<paramref name="maxValue"/>.
            </summary>
            <param name="maxValue">The inclusive maximum value.</param>
            <param name="buffer">The array of double-precision floating-point numbers to be filled.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextDoubles(System.Int32)">
            <summary>
            Returns an array of double-precision floating-point numbers with random values in the range 0..1.
            </summary>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of double-precision floating-point numbers filled with random values such that 0 ≤ value ≤ 1.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextDoubles(System.Double,System.Double,System.Int32)">
            <summary>
            Returns an array of double-precision floating-point numbers with random values in the range <paramref name="minValue"/>..<paramref name="maxValue"/>.
            </summary>
            <param name="minValue">The inclusive minimum value.</param>
            <param name="maxValue">The inclusive maximum value.</param>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of double-precision floating-point numbers filled with random values such that <paramref name="minValue"/> ≤ value ≤ <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextDoubles(System.Double,System.Int32)">
            <summary>
            Returns an array of double-precision floating-point numbers with random values in the range 0..<paramref name="maxValue"/>.
            </summary>
            <param name="maxValue">The inclusive maximum value.</param>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of double-precision floating-point numbers filled with random values such that 0 ≤ value ≤ <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextFloat">
            <summary>
            Returns a random single-precision floating-point number in the range 0..1.
            </summary>
            <returns>A random single-precision floating-point number such that 0 ≤ value ≤ 1.</returns>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextFloat(System.Single,System.Single)">
            <summary>
            Returns a random single-precision floating-point number in the range <paramref name="minValue"/>..<paramref name="maxValue"/>.
            </summary>
            <param name="minValue">The inclusive minimum value.</param>
            <param name="maxValue">The inclusive maximum value.</param>
            <returns>A random single-precision floating-point number such that <paramref name="minValue"/> ≤ value ≤ <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextFloat(System.Single)">
            <summary>
            Returns a random single-precision floating-point number in the range 0..<paramref name="maxValue"/>.
            </summary>
            <param name="maxValue">The inclusive maximum value.</param>
            <returns>A random single-precision floating-point number such that 0 ≤ value ≤ <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextFloats(System.Single[])">
            <summary>
            Fills an array of single-precision floating-point numbers with random values in the range 0..1.
            </summary>
            <param name="buffer">The array of single-precision floating-point numbers to be filled.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextFloats(System.Single,System.Single,System.Single[])">
            <summary>
            Fills an array of single-precision floating-point numbers with random values in the range <paramref name="minValue"/>..<paramref name="maxValue"/>.
            </summary>
            <param name="minValue">The inclusive minimum value.</param>
            <param name="maxValue">The inclusive maximum value.</param>
            <param name="buffer">The array of single-precision floating-point numbers to be filled.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextFloats(System.Single,System.Single[])">
            <summary>
            Fills an array of single-precision floating-point numbers with random values in the range 0..<paramref name="maxValue"/>.
            </summary>
            <param name="maxValue">The inclusive maximum value.</param>
            <param name="buffer">The array of single-precision floating-point numbers to be filled.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextFloats(System.Int32)">
            <summary>
            Returns an array of single-precision floating-point numbers with random values in the range 0..1.
            </summary>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of single-precision floating-point numbers filled with random values such that 0 ≤ value ≤ 1.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextFloats(System.Single,System.Single,System.Int32)">
            <summary>
            Returns an array of single-precision floating-point numbers with random values in the range <paramref name="minValue"/>..<paramref name="maxValue"/>.
            </summary>
            <param name="minValue">The inclusive minimum value.</param>
            <param name="maxValue">The inclusive maximum value.</param>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of single-precision floating-point numbers filled with random values such that <paramref name="minValue"/> ≤ value ≤ <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextFloats(System.Single,System.Int32)">
            <summary>
            Returns an array of single-precision floating-point numbers with random values in the range 0..<paramref name="maxValue"/>.
            </summary>
            <param name="maxValue">The inclusive maximum value.</param>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of single-precision floating-point numbers filled with random values such that 0 ≤ value ≤ <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextByte">
            <summary>
            Returns a random 8-bit integer in the range 0..<seealso cref="F:System.Byte.MaxValue"/>.
            </summary>
            <returns>A random 8-bit integer such that 0 ≤ value &lt; <seealso cref="F:System.Byte.MaxValue"/>.</returns>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextByte(System.Byte,System.Byte)">
            <summary>
            Returns a random 8-bit integer in the range <paramref name="minValue"/>..<paramref name="maxValue"/>.
            </summary>
            <param name="minValue">The inclusive minimum value.</param>
            <param name="maxValue">The exclusive maximum value.</param>
            <returns>A random 8-bit integer such that <paramref name="minValue"/> ≤ value &lt; <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextByte(System.Byte)">
            <summary>
            Returns a random 8-bit integer in the range 0..<paramref name="maxValue"/>.
            </summary>
            <param name="maxValue">The exclusive maximum value.</param>
            <returns>A random 8-bit integer such that 0 ≤ value &lt; <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextBytes(System.Byte[])">
            <summary>
            Fills an array of 8-bit integers with random values in the range 0..<seealso cref="F:System.Byte.MaxValue"/>.
            </summary>
            <param name="buffer">The array of 8-bit integers to be filled.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextBytes(System.Byte,System.Byte,System.Byte[])">
            <summary>
            Fills an array of 8-bit integers with random values in the range <paramref name="minValue"/>..<paramref name="maxValue"/>.
            </summary>
            <param name="minValue">The inclusive minimum value.</param>
            <param name="maxValue">The exclusive maximum value.</param>
            <param name="buffer">The array of 8-bit integers to be filled.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextBytes(System.Byte,System.Byte[])">
            <summary>
            Fills an array of 8-bit integers with random values in the range 0..<paramref name="maxValue"/>.
            </summary>
            <param name="maxValue">The exclusive maximum value.</param>
            <param name="buffer">The array of 8-bit integers to be filled.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextBytes(System.Int32)">
            <summary>
            Returns an array of 8-bit integers with random values in the range 0..<seealso cref="F:System.Byte.MaxValue"/>.
            </summary>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of 8-bit integers filled with random values such that 0 ≤ value &lt; <seealso cref="F:System.Byte.MaxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextBytes(System.Byte,System.Byte,System.Int32)">
            <summary>
            Returns an array of 8-bit integers with random values in the range <paramref name="minValue"/>..<paramref name="maxValue"/>.
            </summary>
            <param name="minValue">The inclusive minimum value.</param>
            <param name="maxValue">The exclusive maximum value.</param>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of 8-bit integers filled with random values such that <paramref name="minValue"/> ≤ value &lt; <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextBytes(System.Byte,System.Int32)">
            <summary>
            Returns an array of 8-bit integers with random values in the range 0..<paramref name="maxValue"/>.
            </summary>
            <param name="maxValue">The exclusive maximum value.</param>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of 8-bit integers filled with random values such that 0 ≤ value &lt; <paramref name="maxValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextBool">
            <summary>
            Returns a random boolean value at equal odds.
            </summary>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextBools(System.Boolean[])">
            <summary>
            Fills an array of boolean values at equal odds.
            </summary>
            <param name="buffer">The array of booleans to be filled.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextBools(System.Int32)">
            <summary>
            Returns an array of boolean values at equal odds.
            </summary>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of booleans filled with random values at equal odds.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.Shuffle``1(System.Collections.Generic.List{``0})">
            <summary>
            Shuffles the values in a list.
            </summary>
            <typeparam name="T">The type of data contained within the list.</typeparam>
            <param name="list">The list being shuffled.</param>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.Shuffle``1(``0[])">
            <summary>
            Shuffles the values in a array.
            </summary>
            <typeparam name="T">The type of data contained within the array.</typeparam>
            <param name="array">The array being shuffled.</param>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.Choose``1(System.Collections.Generic.List{``0})">
            <summary>
            Selects a random element out of a list.
            </summary>
            <typeparam name="T">The type of data contained within the list.</typeparam>
            <param name="list">The list to select a random element from.</param>
            <returns>A random element selected from <paramref name="list"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.Choose``1(System.Collections.Generic.List{``0},``0[])">
            <summary>
            Fills an array with random elements selected from a list.
            </summary>
            <typeparam name="T">The type of data contained within the list.</typeparam>
            <param name="list">The list to select a random element from.</param>
            <param name="buffer">The array to fill with random elements.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.Choose``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            Returns an array filled with random elements selected from a list.
            </summary>
            <typeparam name="T">The type of data contained within the list.</typeparam>
            <param name="list">The list to select a random element from.</param>
            <param name="amount">The size of the array to create.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.Choose``1(``0[])">
            <summary>
            Selects a random element out of an array.
            </summary>
            <typeparam name="T">The type of data contained within the array.</typeparam>
            <param name="array">The array to select a random element from.</param>
            <returns>A random element selected from <paramref name="array"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.Choose``1(``0[],``0[])">
            <summary>
            Fills an array with random elements selected from an array.
            </summary>
            <typeparam name="T">The type of data contained within the array.</typeparam>
            <param name="array">The array to select a random element from.</param>
            <param name="buffer">The array to fill with random elements.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.Choose``1(``0[],System.Int32)">
            <summary>
            Returns an array filled with random elements selected from an array.
            </summary>
            <typeparam name="T">The type of data contained within the array.</typeparam>
            <param name="array">The array to select a random element from.</param>
            <param name="amount">The size of the array to create.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextProbability(System.Single)">
            <summary>
            Returns a boolean value with a <paramref name="percent"/>% chance of being <see langword="true"/>.
            </summary>
            <param name="percent">The probability that the value will be <see langword="true"/>.</param>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextProbability(System.Int32)">
            <summary>
            Returns a boolean value with a <paramref name="percent"/>% chance of being <see langword="true"/>.
            </summary>
            <param name="percent">The probability that the value will be <see langword="true"/>.</param>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextProbabilities(System.Single,System.Boolean[])">
            <summary>
            Fills an array of boolean values with a <paramref name="percent"/>% chance of being <see langword="true"/>.
            </summary>
            <param name="percent">The probability that the value will be <see langword="true"/>.</param>
            <param name="buffer">The array of booleans to be filled.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextProbabilities(System.Single,System.Int32)">
            <summary>
            Returns an array of boolean values with a <paramref name="percent"/>% chance of being <see langword="true"/>.
            </summary>
            <param name="percent">The probability that the value will be <see langword="true"/>.</param>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of booleans filled with random values at equal odds.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextProbabilities(System.Int32,System.Boolean[])">
            <summary>
            Fills an array of boolean values with a <paramref name="percent"/>% chance of being <see langword="true"/>.
            </summary>
            <param name="percent">The probability that the value will be <see langword="true"/>.</param>
            <param name="buffer">The array of booleans to be filled.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextProbabilities(System.Int32,System.Int32)">
            <summary>
            Returns an array of boolean values with a <paramref name="percent"/>% chance of being <see langword="true"/>.
            </summary>
            <param name="percent">The probability that the value will be <see langword="true"/>.</param>
            <param name="amount">The size of the array to create.</param>
            <returns>An array of booleans filled with random values at equal odds.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextOdds(System.Int32,System.Int32)">
            <summary>
            Returns a boolean value with a <paramref name="a"/> in <paramref name="b"/> chance of being <see langword="true"/>.
            </summary>
            <param name="a">The number of time <see langword="true"/> can be expected in <paramref name="b"/> attempts.</param>
            <param name="b">The number of attempts in which you can expect <paramref name="a"/> results of <see langword="true"/></param>
            <exception cref="T:System.DivideByZeroException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextOdds(System.Int32,System.Int32,System.Boolean[])">
            <summary>
            Fills an array of boolean values with a <paramref name="a"/> in <paramref name="b"/> chance of being <see langword="true"/>.
            </summary>
            <param name="a">The number of times <see langword="true"/> can be expected in <paramref name="b"/> attempts.</param>
            <param name="b">The number of attempts in which you can expect <paramref name="a"/> results of <see langword="true"/></param>
            <param name="buffer">The array of booleans to be filled.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.DivideByZeroException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.NextOdds(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns an array of boolean values filled with a <paramref name="a"/> in <paramref name="b"/> chance of being <see langword="true"/>.
            </summary>
            <param name="a">The number of times <see langword="true"/> can be expected in <paramref name="b"/> attempts.</param>
            <param name="b">The number of attempts in which you can expect <paramref name="a"/> results of <see langword="true"/></param>
            <param name="amount">The size of the array to create.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.DivideByZeroException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.ChooseEnum``1">
            <summary>
            Selects a random value from an <seealso cref="T:System.Enum"/>
            </summary>
            <typeparam name="T">The type of <seealso cref="T:System.Enum"/> being selected from.</typeparam>
            <returns>A random value of type <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.ChooseEnum``1(``0[])">
            <summary>
            Fills an array of <typeparamref name="T"/> Enum values.
            </summary>
            <typeparam name="T">The type of <seealso cref="T:System.Enum"/> being selected from.</typeparam>
            <param name = "buffer" > The array to fill with random elements.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.ChooseEnum``1(System.Int32)">
            <summary>
            Returns an array of random <typeparamref name="T"/> Enum values.
            </summary>
            <typeparam name="T">The type of <seealso cref="T:System.Enum"/> being selected from.</typeparam>
            <param name = "amount" >The size of array to create.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.SaveState">
            <summary>
            Get the current state of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.SaveState(System.IO.Stream)">
            <summary>
            Write the current state of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/> to a <seealso cref="T:System.IO.Stream"/>
            </summary>
            <param name="stream">The stream to write the state to.</param>
            <exception cref="T:System.NotSupportedException">The stream must be writable.</exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.LoadState(System.Int32[])">
            <summary>
            Load an existing <seealso cref="T:StellarWolf.Core.ChaosEngine"/> state to the instance.
            </summary>
            <param name="state">The state of a <seealso cref="T:StellarWolf.Core.ChaosEngine"/> to load.</param>
            <exception cref="T:System.Exception">state must be 59 elements in size.</exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.LoadState(System.IO.Stream)">
            <summary>
            Load an existing <seealso cref="T:StellarWolf.Core.ChaosEngine"/> state from a <seealso cref="T:System.IO.Stream"/>
            </summary>
            <param name="stream">The stream to read the state from.</param>
            <exception cref="T:System.NotSupportedException">The stream must be readable.</exception>
            <exception cref="T:System.Exception">state must be 59 elements in size.</exception>
        </member>
        <member name="M:StellarWolf.Core.ChaosEngine.ToString">
            <summary>
            Returns a string representation of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/>
            </summary>
            <returns>A string representation of the <seealso cref="T:StellarWolf.Core.ChaosEngine"/></returns>
        </member>
        <member name="T:StellarWolf.Core.DieType">
            <summary>
            Defines the standard set of dice
            </summary>
        </member>
        <member name="F:StellarWolf.Core.DieType.D4">
            <summary>Represents a standard 4 sided die.</summary>
        </member>
        <member name="F:StellarWolf.Core.DieType.D6">
            <summary>Represents a standard 6 sided die.</summary>
        </member>
        <member name="F:StellarWolf.Core.DieType.D8">
            <summary>Represents a standard 8 sided die.</summary>
        </member>
        <member name="F:StellarWolf.Core.DieType.D10">
            <summary>Represents a standard 10 sided die.</summary>
        </member>
        <member name="F:StellarWolf.Core.DieType.D12">
            <summary>Represents a standard 12 sided die.</summary>
        </member>
        <member name="F:StellarWolf.Core.DieType.D20">
            <summary>Represents a standard 20 sided die.</summary>
        </member>
        <member name="F:StellarWolf.Core.DieType.D100">
            <summary>Represents a standard 10 sided die and a percentile die.</summary>
        </member>
        <member name="T:StellarWolf.Core.IWeighted">
            <summary>
            A base for weighted objects.
            </summary>
        </member>
        <member name="P:StellarWolf.Core.IWeighted.Weight">
            <summary>
            The weight of the object.
            </summary>
        </member>
        <member name="T:StellarWolf.Core.Dice">
            <summary>
            A structure to store and roll dice.
            </summary>
        </member>
        <member name="P:StellarWolf.Core.Dice.Count">
            <summary>
            The number of dice in the set.
            </summary>
        </member>
        <member name="P:StellarWolf.Core.Dice.Type">
            <summary>
            The number of sides a die in the set has.
            </summary>
        </member>
        <member name="M:StellarWolf.Core.Dice.#ctor(System.Int32,StellarWolf.Core.DieType)">
            <summary>
            Initializes a new instance of Dice.
            </summary>
            <param name="count">The number of dice in the set. </param>
            <param name="type">The number of sides a die in the set has.</param>
        </member>
        <member name="M:StellarWolf.Core.Dice.CompareTo(StellarWolf.Core.Dice)">
            <summary>
            Compares this instance to a specified dice and returns an indication of their relative values.
            </summary>
            <param name="dice">Dice to compare.</param>
            <returns>A signed number indicating the relative values of this instance and <paramref name="dice"/></returns>
        </member>
        <member name="M:StellarWolf.Core.Dice.Roll(System.Int32,StellarWolf.Core.DieType,System.Int32)">
            <summary>
            Rolls the set and returns the total ± the modifier.
            </summary>
            <param name="count">The number of dice in the set.</param>
            <param name="type">The number of sides a die in the set has.</param>
            <param name="modifier">The amount to add or subract from the total.</param>
            <returns>The total ± the modifier.</returns>
        </member>
        <member name="M:StellarWolf.Core.Dice.Roll(System.Int32,System.Int32,System.Int32)">
            <summary>
            Rolls the set and returns the total ± the modifier.
            </summary>
            <param name="count">The number of dice in the set.</param>
            <param name="sides">The number of sides a die in the set has.</param>
            <param name="modifier">The amount to add or subract from the total.</param>
            <returns>The total ± the modifier.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:StellarWolf.Core.Dice.Roll(System.Int32)">
            <summary>
            Rolls the set and returns the total ± the modifier.
            </summary>
            <param name="modifier">The amount to add or subract from the total.</param>
            <returns>The total ± the modifier.</returns>
        </member>
        <member name="M:StellarWolf.Core.Dice.Rolls(System.Int32,StellarWolf.Core.DieType)">
            <summary>
            Rolls the set and returns the individual rolls.
            </summary>
            <param name="count">The number of dice in the set.</param>
            <param name="type">The number of sides a die in the set has.</param>
            <returns>An array containing each roll in the set.</returns>
        </member>
        <member name="M:StellarWolf.Core.Dice.Rolls(System.Int32,System.Int32)">
            <summary>
            Rolls the set and returns the individual rolls.
            </summary>
            <param name="count">The number of dice in the set.</param>
            <param name="sides">The number of sides a die in the set has.</param>
            <returns>An array containing each roll in the set.</returns>
        </member>
        <member name="M:StellarWolf.Core.Dice.Rolls">
            <summary>
            Rolls the set and returns the individual rolls.
            </summary>
            <returns>An array containing each roll in the set.</returns>
        </member>
        <member name="M:StellarWolf.Core.Dice.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:StellarWolf.Core.Dice.Equals(StellarWolf.Core.Dice)">
            <inheritdoc/>
        </member>
        <member name="M:StellarWolf.Core.Dice.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:StellarWolf.Core.Dice.ToString">
            <inheritdoc/>
        </member>
        <member name="M:StellarWolf.Core.Dice.op_Equality(StellarWolf.Core.Dice,StellarWolf.Core.Dice)">
            <summary>
            Checks for equality between 2 dice objects.
            </summary>
            <param name="lhs">A dice to compare.</param>
            <param name="rhs">A dice to compare.</param>
            <returns>A <seealso cref="T:System.Boolean"/> value determining equality.</returns>
        </member>
        <member name="M:StellarWolf.Core.Dice.op_Inequality(StellarWolf.Core.Dice,StellarWolf.Core.Dice)">
            <summary>
            Checks for inequality between 2 dice objects.
            </summary>
            <param name="lhs">A dice to compare.</param>
            <param name="rhs">A dice to compare.</param>
            <returns>A <seealso cref="T:System.Boolean"/> value determining inequality.</returns>
        </member>
        <member name="M:StellarWolf.Core.Dice.op_LessThan(StellarWolf.Core.Dice,StellarWolf.Core.Dice)">
            <summary>
            Compares <paramref name="lhs"/> against <paramref name="rhs"/> to see if it is smaller than it.
            </summary>
            <param name="lhs">A dice to compare.</param>
            <param name="rhs">A dice to compare.</param>
            <returns>A <seealso cref="T:System.Boolean"/> value determining whether <paramref name="lhs"/> is less than <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:StellarWolf.Core.Dice.op_GreaterThan(StellarWolf.Core.Dice,StellarWolf.Core.Dice)">
            <summary>
            Compares <paramref name="lhs"/> against <paramref name="rhs"/> to see if it is larger than it.
            </summary>
            <param name="lhs">A dice to compare.</param>
            <param name="rhs">A dice to compare.</param>
            <returns>A <seealso cref="T:System.Boolean"/> value determining whether <paramref name="lhs"/> is greater than <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:StellarWolf.Core.Dice.op_LessThanOrEqual(StellarWolf.Core.Dice,StellarWolf.Core.Dice)">
            <summary>
            Compares <paramref name="lhs"/> against <paramref name="rhs"/> to see if it is smaller than or equal to it.
            </summary>
            <param name="lhs">A dice to compare.</param>
            <param name="rhs">A dice to compare.</param>
            <returns>A <seealso cref="T:System.Boolean"/> value determining whether <paramref name="lhs"/> is less than or equal to <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:StellarWolf.Core.Dice.op_GreaterThanOrEqual(StellarWolf.Core.Dice,StellarWolf.Core.Dice)">
            <summary>
            Compares <paramref name="lhs"/> against <paramref name="rhs"/> to see if it is larger than or equal to it.
            </summary>
            <param name="lhs">A dice to compare.</param>
            <param name="rhs">A dice to compare.</param>
            <returns>A <seealso cref="T:System.Boolean"/> value determining whether <paramref name="lhs"/> is greater than or equal to <paramref name="rhs"/>.</returns>
        </member>
        <member name="T:StellarWolf.Core.WeightAttribute">
            <summary>
            Defines the weight of an enum value.
            </summary>
        </member>
        <member name="P:StellarWolf.Core.WeightAttribute.Weight">
            <summary>
            The weight of the value.
            </summary>
        </member>
        <member name="M:StellarWolf.Core.WeightAttribute.#ctor(System.Int32)">
            <summary>
            Creates a new WeightAttribute.
            </summary>
            <param name="weight">The weight of the value.</param>
        </member>
        <member name="T:StellarWolf.Core.WeightAttributeExtensions">
            <summary>
            Extensions relating to <seealso cref="T:StellarWolf.Core.WeightAttribute"/>
            </summary>
        </member>
        <member name="M:StellarWolf.Core.WeightAttributeExtensions.GetWeight``1(``0)">
            <summary>
            Gets the weight of an enum value, if <seealso cref="T:StellarWolf.Core.WeightAttribute"/> is not present it defaults to a weight of 1.
            </summary>
            <typeparam name="T">The type of the enum value.</typeparam>
            <param name="enumValue">The value to get the weight of.</param>
            <returns>The weight of the enum value.</returns>
        </member>
    </members>
</doc>
